name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.target.name }} - ${{ matrix.toolchain.name }}
    runs-on: ${{ matrix.toolchain.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        target:
        - name: quakespasm

        - name: quakespasm-spiked
          deps:
            Linux: sudo apt install libgnutls28-dev
            Windows: vcpkg install zlib zlib:x86-windows

        - name: vkquake
          deps:
            common: |
              mkdir -p build/glslang
              cd build/glslang
              GLSLANG_PACKAGE=glslang-15.3.0-${RUNNER_OS}.tar.xz
              aria2c https://github.com/alexey-lysiuk/quakespasm-cmake/releases/download/ci_deps/${GLSLANG_PACKAGE}
              tar -xf ${GLSLANG_PACKAGE}
            Linux: sudo apt install libvulkan-dev
            macOS: brew install vulkan-headers vulkan-loader
          configure: export PATH=$PATH:$(pwd)/build/glslang

        - name: ironwail
          deps:
            Linux: sudo apt install libcurl4-openssl-dev

        toolchain:
        - name: Linux Clang
          os: ubuntu-24.04
          deps: sudo apt update && sudo apt install libflac-dev libmpg123-dev libmodplug-dev libopusfile-dev libsdl2-dev libvorbis-dev
          cmake_args: -DCMAKE_C_COMPILER=clang

        - name: Linux GCC
          os: ubuntu-24.04
          deps: sudo apt update && sudo apt install libflac-dev libmpg123-dev libopusfile-dev libsdl2-dev libvorbis-dev libxmp-dev

        - name: macOS ARM
          os: macos-15
          deps: brew install flac libvorbis libxmp mpg123 opusfile sdl2

        - name: macOS Intel
          os: macos-15-intel
          deps: brew install flac libmikmod libvorbis mpg123 opusfile sdl2

        - name: MSVC 32-bit
          os: windows-2025
          cmake_args: -A Win32 -DCMAKE_PREFIX_PATH=$VCPKG_INSTALLATION_ROOT/installed/x86-windows

        - name: MSVC 64-bit
          os: windows-2025
          cmake_args: -DCMAKE_PREFIX_PATH=$VCPKG_INSTALLATION_ROOT/installed/x64-windows

    steps:
    - uses: actions/checkout@v5

    - name: Checkout Source Code
      run: |
        git submodule update --init -- src/${{ matrix.target.name }}

    - name: Install Dependencies
      run: |
        ${{ matrix.toolchain.deps }}
        ${{ matrix.target.deps.common }}
        ${{ matrix.target.deps[runner.os] }}

    - name: Configure
      run: |
        ${{ matrix.target.configure }}
        cmake -B build -DQUAKE_TARGET=${{ matrix.target.name }} ${{ matrix.toolchain.cmake_args }} .

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - name: Build
      run: |
        export MAKEFLAGS=--keep-going
        cmake --build build --config Release --parallel ${{ steps.cpu-cores.outputs.count }}

    - name: List Build Directory
      if: always()
      run: |
        git status
        ls -lR build
